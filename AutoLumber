# Parametri
RaggioScansione = 15
TreeStaticID = [3221, 3222, 3225, 3227, 3228, 3229, 3210, 3238, 3240, 3242, 3243, 3267, 3268, 3272, 3273, 3274, 3275, 3276, 3277, 3280, 3283, 3286, 3288, 3290, 3293, 3296, 3299, 3302, 3320, 3323, 3326, 3329, 3365, 3367, 3381, 3383, 3384, 3394, 3395, 3417, 3440, 3461, 3476, 3478, 3480, 3482, 3484, 3486, 3488, 3490, 3492, 3496]
SerialAccetta = 0x401A17E2 # Serial Axe
woodTool = 0x401A17E0 # carp tool
EquipAccettaDelay = 1000
TimeoutOnWaitAction = 4000
ChopDelay = 1000
RecallPause = 3000 
DragDelay = 1200
LogID = 0x1BDD
OtherResourceID = [12687, 12697, 12127, 12688, 12689]
WeightLimit2 = 250



# Variabili Sistema
from System.Collections.Generic import List
tileinfo = List[Statics.TileInfo]
treeposx = []
treeposy = []
treeposz = []
treegfx = []
treenumber = 0
blockcount = 0
lastrune = 5
onloop = True

def RangeTree( spotnumber ):
    if (Player.Position.X - 1) == treeposx[spotnumber] and (Player.Position.Y + 1) == treeposy[spotnumber]:
        return True
    elif (Player.Position.X - 1) == treeposx[spotnumber] and (Player.Position.Y - 1) == treeposy[spotnumber]:
        return True
    elif (Player.Position.X + 1) == treeposx[spotnumber] and (Player.Position.Y + 1) == treeposy[spotnumber]:
        return True
    elif (Player.Position.X + 1) == treeposx[spotnumber] and (Player.Position.Y - 1) == treeposy[spotnumber]:
        return True
    elif Player.Position.X == treeposx[spotnumber] and (Player.Position.Y - 1) == treeposy[spotnumber]:
        return True    
    elif Player.Position.X == treeposx[spotnumber] and (Player.Position.Y + 1) == treeposy[spotnumber]:   
        return True     
    elif Player.Position.Y == treeposy[spotnumber] and (Player.Position.X - 1) == treeposx[spotnumber]:
        return True    
    elif Player.Position.Y == treeposy[spotnumber] and (Player.Position.X + 1) == treeposx[spotnumber]:   
        return True    
    else:
        return False
    
def ScanStatic( ): 
    global treenumber
    Misc.SendMessage("Eyeballing Local Trees..", 77)
    minx = Player.Position.X - RaggioScansione
    maxx = Player.Position.X + RaggioScansione
    miny = Player.Position.Y - RaggioScansione
    maxy = Player.Position.Y + RaggioScansione

    while miny <= maxy:
        while minx <= maxx:
            tileinfo = Statics.GetStaticsTileInfo(minx, miny, Player.Map)
            if tileinfo.Count > 0:
                for tile in tileinfo:
                    for staticid in TreeStaticID:
                        if staticid == tile.StaticID:
                            #Misc.SendMessage('Tree Located Here: %i - Y: %i - Z: %i' % (minx, miny, tile.StaticZ), 66)
                            treeposx.Add(minx)
                            treeposy.Add(miny)
                            treeposz.Add(tile.StaticZ)
                            treegfx.Add(tile.StaticID)
            else:
                Misc.NoOperation()
            minx = minx + 1
        minx = Player.Position.X - RaggioScansione            
        miny = miny + 1
    treenumber = treeposx.Count    
    Misc.SendMessage('Total Trees Detected: %i' % (treenumber), 77)
    
def MoveToTree( spotnumber ):
    pathlock = 0
    Misc.SendMessage('Moving to Tree: %i' % (spotnumber), 77)
    Player.PathFindTo(treeposx[spotnumber], treeposy[spotnumber], treeposz[spotnumber])
    while not RangeTree(spotnumber):
        Misc.Pause(100)
        pathlock = pathlock + 1
        if pathlock > 350:
            Player.PathFindTo(treeposx[spotnumber], treeposy[spotnumber], treeposz[spotnumber])  
            pathlock = 0
        else:
            Misc.NoOperation()
        
    Misc.SendMessage('Tree Number: %i' % (spotnumber), 77)


    
def CutTree( spotnumber ):
    global blockcount
    if Target.HasTarget():
        Misc.SendMessage("Possible blockage..", 77)
        Target.Cancel()
        Misc.Pause(500)
    else:
        Misc.NoOperation()  
        
    if (Player.Weight >= WeightLimit2):
        Items.UseItem(woodTool)
        Gumps.WaitForGump(1936936411, 10000)
        Gumps.SendAction(1936936411, 2)
        Gumps.WaitForGump(1936936411, 10000)
        Gumps.SendAction(1936936411, 0)
        
    else:
        Misc.NoOperation()
        
    
    Journal.Clear()
    accetta = Items.FindBySerial(SerialAccetta)
    Items.UseItem(accetta)
    Target.WaitForTarget(TimeoutOnWaitAction)
    Target.TargetExecute(treeposx[spotnumber], treeposy[spotnumber], treeposz[spotnumber], treegfx[spotnumber])
    Misc.Pause(ChopDelay)
    if Journal.Search("There's not enough"):
        Misc.SendMessage("Changing Tree..", 77)
    elif Journal.Search("That is too far away"):
        blockcount = blockcount + 1
        Journal.Clear()
        if (blockcount > 15):
            blockcount = 0
            Misc.SendMessage("Changing Tree, Possible blockage..", 77)
        else:
            CutTree(spotnumber)
    else:
        CutTree(spotnumber)
            
while onloop:
    
    ScanStatic()
    i = 0
    while i < treenumber:
        MoveToTree(i)
        CutTree(i)
        i = i + 1
    treeposx = []
    treeposy = []
    treeposz = []
    treegfx = []
    treenumber = 0
    
    
